package com.yihaoxing.demo.test.json;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.google.common.collect.Lists;
import com.google.common.collect.Sets;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.yihaoxing.demo.test.basic.C;
import com.yihaoxing.demo.test.basic.Demo;
import com.yihaoxing.demo.test.basic.MyException;
import com.yihaoxing.demo.test.basic.SimpleModel;
import org.apache.commons.collections.CollectionUtils;
import org.junit.Test;
import org.springframework.boot.test.context.SpringBootTest;

import java.io.IOException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

/**
 * @author yhx
 * @date 2020/10/9 22:00
 */
@SpringBootTest
public class GsonTest {
    static Gson gson = new Gson();

    @Test
    public void test01() throws IOException {
        String data = "{}";
        Map<String, SimpleModel> map = toMap(data, String.class, SimpleModel.class);
        ArrayList<SimpleModel> list = new ArrayList<>();
        for (String s : map.keySet()) {
            list.add(map.get(s));
        }

        List<SimpleModel> strings = toList(JSON.toJSONString(list), SimpleModel.class);

        //Map<String, SimpleModel> toMap = toMap(data, SimpleModel.class);

        ArrayList<SimpleModel> arrayList = new ArrayList<>();
        for (int i = 0; i < 5; i++) {
            SimpleModel simpleModel = new SimpleModel();
            simpleModel.setHigh((float) i);
            simpleModel.setLow((float) i);
            simpleModel.setTime(LocalDateTime.now());
            Demo demo = new Demo();
            demo.setB(i);
            simpleModel.setDemos(Lists.newArrayList(demo));
            arrayList.add(simpleModel);
        }
        String json = gson.toJson(arrayList);

        List<SimpleModel> simpleModels = toList(json, SimpleModel.class);


    }

    public <K, V> Map<K, V> toMap(String json, Class<K> kClazz, Class<V> vClazz) {
        return gson.fromJson(json, TypeToken.getParameterized(LinkedHashMap.class, kClazz, vClazz).getType());
    }

    public <V> Map<String, V> toMap(String json, Class<V> vClazz) {
        return gson.fromJson(json, TypeToken.getParameterized(LinkedHashMap.class, String.class, vClazz).getType());
    }

    public <T> List<T> toList(String json, Class<T> clazz) {
        return gson.fromJson(json, TypeToken.getParameterized(ArrayList.class, clazz).getType());
    }

    @Test
    public void test02() {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < 21; i++) {
            list.add(i);
        }
        if (list.size() > 20) {
            list = list.subList(0, 20);
        }
    }

    @Test
    public void test03() {
        String s = "[{'amount':-239.29}]";
        List<C> collectCredentials = JSON.parseArray(s, C.class);
        System.out.println(collectCredentials);
    }

    @Test
    public void test04() {
        String s = "abc";
        System.out.println(JSON.toJSONString(s));
    }

    @Test
    public void test05() {
        List<Long> list1 = Arrays.asList(20720721018L, 20721046818L, 20732914006L, 20741713589L, 20741713590L, 20741772139L, 20720640165L, 20958727580L, 20958730953L, 20958821225L, 20959106190L, 20959106922L, 20959110809L, 20959110810L, 20959110947L, 20959243998L, 20959244896L, 20973867499L, 20974581817L, 20974636538L, 20974634748L, 20976243071L, 20979414498L, 20979414499L, 21021120197L, 21021120198L, 21054174233L, 21054174738L, 21054175218L, 21210595029L, 21210596033L, 21210596034L, 21210771406L, 21210850487L, 21210861759L, 21210990896L, 21210994345L, 21210994346L, 21211032481L, 21211038570L, 21211039669L, 21211039670L, 21211506950L, 21211676822L, 21211676823L, 21210863962L, 21257137514L, 21257191460L, 21257265759L, 21257269943L, 21257267788L, 21257395853L, 21309161948L, 21296846735L, 21296846736L, 21054000753L, 21054011531L, 21054451926L, 20720637511L, 20720637512L, 20720639369L, 20720639370L, 20720639371L, 20720721467L, 20720724732L, 20720726776L, 20720727421L, 20720728182L, 20720855961L, 20720874613L, 20720875148L, 20720895777L, 20720895778L, 20720898519L, 20720898520L, 20720898721L, 20720898911L, 20720900081L, 20720900082L, 20720632013L, 20720725941L, 20720728538L, 20720880640L, 20720727005L, 20720728342L, 20732589559L, 20732663359L, 20732664665L, 20732665158L, 20732665572L, 20732803232L, 20732803233L, 20732803234L, 20732803235L, 20732803236L, 20732803237L, 20732808132L, 20732915703L, 20732917605L, 20732917606L, 20732981262L, 20732981263L, 20732761011L, 20741366777L, 20741567143L, 20741569696L, 20741652597L, 20741704122L, 20741707168L, 20742039986L, 20742039987L, 20742039988L, 20742645246L, 20742645247L, 20742646700L, 20742741263L, 20742741264L, 20742754745L, 20742754746L, 20720725089L, 20742756625L, 20732913283L, 20743326860L, 20732913284L, 20732913285L, 20732913286L, 20732913287L, 20732913288L, 20742976762L, 20742978835L, 20958727879L, 20958728197L, 20958730402L, 20958826397L, 20958931999L, 20958932267L, 20958933083L, 20958936568L, 20958936569L, 20958936570L, 20958937923L, 20959153786L, 20959154688L, 20959156199L, 20959246760L, 20959246761L, 20959246872L, 20959250684L, 20959366575L, 20959366880L, 20959367352L, 20959367796L, 20959368073L, 20959368282L, 20958729417L, 20972014509L, 20958827347L, 20958827348L, 20958827971L, 20972093886L, 20958828517L, 20972095286L, 20958829769L, 20958829770L, 20958830118L, 20958932711L, 20958932712L, 20958937071L, 20958937072L, 20958939077L, 20958939078L, 20958939708L, 20958939709L, 20959154107L, 20959242736L, 20959242737L, 20959245959L, 20972536568L, 20959246973L, 20972612450L, 20959249316L, 20972778443L, 20959367456L, 20972781569L, 20958935191L, 20958935192L, 20959365735L, 20959365736L, 20959365737L, 20974253454L, 20974253455L, 20974256134L, 20974493359L, 20974667185L, 20974669632L, 20974712417L, 20974718372L, 20974720345L, 20974806299L, 20974806300L, 20974841612L, 20974843199L, 20974850759L, 20958826826L, 20974954500L, 20959245310L, 20976183669L, 20976183670L, 20976188667L, 20978468870L, 20978582449L, 20978713639L, 20978932838L, 20978932839L, 20978932840L, 20978932841L, 20978932842L, 20979853424L, 20979853425L, 20979853426L, 20979932042L, 20981385297L, 20981387125L, 20982017864L, 20982105429L, 20982294035L, 20982294036L, 20870584497L, 20870584498L, 20982835227L, 20982835228L, 20982835229L, 20720636196L, 20720636197L, 20720636198L, 20732862987L, 20732862988L, 20742127946L, 21053922512L, 21053922513L, 21053922514L, 21053922515L, 21053922516L, 21053922517L, 21053923990L, 21053992001L, 21053992002L, 21053992003L, 21054180866L, 21054180867L, 21054252802L, 21054253526L, 21054254290L, 21054255031L, 21054255379L, 21054452676L, 21054454881L, 21054455556L, 21057273722L, 20974665078L, 20978559483L, 20981938577L, 20982014858L, 20982018887L, 21057933162L, 20982102180L, 20982106817L, 20982364432L, 20982367076L, 20982445164L, 20982513550L, 20982560491L, 20982596823L, 20982668319L, 20982735787L, 20982737312L, 20983984339L, 21058460337L, 21053856515L, 21053856516L, 21053925208L, 21058881187L, 21053925209L, 21054011936L, 21054011937L, 21059462985L, 21054254115L, 21054254722L, 21054255783L, 21054177909L, 21054178074L, 21054180073L, 21054454048L, 21054454049L, 21061287770L, 21054455274L, 21054455369L, 21054455720L, 21061404496L, 21061348692L, 21061472409L, 21061473822L, 21061480696L, 21061591747L, 21061689182L, 21061960342L, 21062003762L, 21062008066L, 21062008067L, 21062062425L, 21062066426L, 21062070944L, 21061682869L, 21065082195L, 21065082196L, 21054453565L, 21054453566L, 21065603732L, 21065603733L, 21062168212L, 21209583048L, 21209583049L, 21209583050L, 21209782186L, 21209782187L, 21209782188L, 21210591701L, 21210592118L, 21210592431L, 21210685325L, 21210685326L, 21210746945L, 21210746946L, 21210772025L, 21210849801L, 21210849802L, 21210865006L, 21210919864L, 21210919865L, 21210942323L, 21210942324L, 21210987404L, 21210988020L, 21210988282L, 21210988527L, 21210988896L, 21210989200L, 21210995371L, 21210995372L, 21210996857L, 21210996858L, 21210996859L, 21210996860L, 21210999123L, 21211033242L, 21211033809L, 21211034005L, 21211036450L, 21211037004L, 21211038136L, 21211039078L, 21211040217L, 21211183423L, 21211188012L, 21211188336L, 21211189519L, 21211189520L, 21211262908L, 21211262909L, 21211265897L, 21211265898L, 21211269380L, 21211269381L, 21211269911L, 21211269912L, 21209587016L, 21220243842L, 21220243843L, 21210593039L, 21210987735L, 21211032928L, 21221211910L, 21221211911L, 21211035344L, 21221213368L, 21211510903L, 21221219550L, 21221370954L, 21211682330L, 21226386553L, 21006354294L, 20720634270L, 20720634271L, 20720873414L, 20720873415L, 20720873416L, 20720878670L, 20720878671L, 20732807410L, 20732807411L, 20732807412L, 20742896320L, 20742896321L, 20742896322L, 20958729251L, 20958729252L, 20958828968L, 20958828969L, 20972098046L, 20975176390L, 20958938238L, 20959241195L, 20959241196L, 21054254478L, 21061534808L, 21061534809L, 21209675786L, 21209675787L, 21210743401L, 21210743402L, 21210743403L, 21297902140L, 21297902141L, 21297902142L, 21297902143L, 21297902144L, 21299885561L, 21299885562L, 21300002456L, 21300058651L, 21300058652L, 21300112754L, 21300329353L, 21300329354L, 21300329355L, 21300329356L, 21301120308L, 21301120309L, 21301213106L, 21301213107L, 21301219440L, 21301994193L, 21301994194L, 21301994195L, 21301994196L, 21301994197L, 21301994198L, 21301999868L, 21302125656L, 21302125657L, 21299174036L, 21299177044L, 21302246691L, 21299244784L, 21302305547L, 21299698695L, 21299698696L, 21302711652L, 21302711653L, 21302717460L, 21302772627L, 21302858535L, 21302923517L, 20720730682L, 21300560658L, 21300982285L, 21300982286L, 21300982287L, 21301677602L, 21301677603L, 20959160712L, 20959160713L, 20959160714L, 20959160715L, 20959160716L, 20972525886L, 20972525887L, 20972525888L, 20959160717L, 20959152449L, 21053923463L, 21054000752L, 21054000754L, 21054000755L, 21054000756L, 21059320902L, 21064869003L, 21054451923L, 21054451924L, 21054451925L, 21210993542L, 21210993543L, 21210993544L, 21210993545L, 21210993546L, 20742786739L, 20742786740L, 20742786741L, 21054253253L, 21302925958L, 21302780358L, 21302777326L, 20720869569L, 20732570882L, 20732570883L, 21333618091L, 21374816280L, 21061596068L, 21061600865L, 21061684738L, 21061690879L, 21061749032L, 21061951970L, 21061953481L, 21209501464L, 21006354290L, 21297398829L, 21302543917L, 21302549172L, 21296846730L, 20720891765L, 20720892672L, 20720896584L, 20958940726L, 20959026833L, 20959029527L, 20959412495L, 20959418658L, 20959493099L, 20974030589L, 20974456326L, 20980807004L, 20980930283L, 20980983601L, 21054179317L, 21054380018L, 21054454571L, 21061538051L, 21211682817L, 21211704947L, 21211821874L, 21211827704L, 21211827703L, 21211863795L, 21211867510L, 21211868486L, 21211867880L, 21211954485L, 21211954713L, 21211955089L, 21211967020L, 21211955643L, 21211967908L, 21211968173L, 21211969711L, 21211970927L, 21212001550L, 21211618058L, 21211908092L, 21221879545L, 21257200213L, 21221871679L, 21211968470L, 20959107969L, 20959107968L, 20959107967L, 21054256729L, 21054256728L, 21054256727L, 21211755262L, 20721042420L, 20732762938L, 20959025952L, 20959107287L, 20959107286L, 20959107284L, 20959107283L, 20959103732L, 21054016010L, 21221811744L, 21221811743L, 21221811742L, 21221811741L, 21221811740L, 21221811739L, 21221811738L, 21054176429L, 21222142149L, 21222142148L, 21222142147L, 21222142146L, 21222142145L, 21222142144L, 21222142143L, 21054018894L, 21054018895L, 21054018901L, 20973532063L, 20959023571L, 20959025521L, 20959025520L, 20959025519L, 21211489336L, 21211489335L, 21211182923L, 20959026137L, 20959107285L, 20959369173L, 20959496922L, 20959555434L, 20959557515L, 20959557514L, 20959557513L, 20959557512L, 20959558139L, 20959558670L, 20973638582L, 20974072069L, 20974076160L, 20978589005L, 20978939607L, 20980173586L, 20981203417L, 20981304246L, 20981308670L, 20870584494L, 20870584495L, 21053996132L, 21054012300L, 21054013673L, 21054014469L, 21054176719L, 21211508125L, 21211510505L, 21211580048L, 21211756036L, 21211866768L, 21212005839L, 21221491497L, 21222090993L, 21222001005L, 21221877176L, 21257262763L, 21006354291L, 21211755609L, 21211969623L, 21297340592L, 21297471862L, 21221496207L, 20732663819L, 20721047076L, 20958823769L, 21296846734L, 20974074917L, 21212002016L, 21054018896L, 21054018897L, 21054018898L, 21054018899L, 21054018900L, 21054018902L, 20959418659L, 20959416591L, 20959492400L, 20959493100L, 20959555435L, 20959557516L, 20972945811L, 20974456327L, 20974460317L, 20980723052L, 20980930284L, 20980983602L, 20980887963L, 20981122179L, 20981128358L, 20974258825L, 21054179318L, 21211508126L, 21211704948L, 21221877177L, 20959107970L, 20732663820L, 21054256730L, 20721047077L, 20958823770L, 21054176428L, 21054176427L, 21296846731L, 21296846732L, 20959491448L);
        List<Long> list2 = Arrays.asList(20720632013L, 20720634270L, 20720634271L, 20720636196L, 20720636197L, 20720636198L, 20720637511L, 20720637512L, 20720639369L, 20720639370L, 20720639371L, 20720640165L, 20720721018L, 20720721467L, 20720724732L, 20720725089L, 20720725941L, 20720726776L, 20720727005L, 20720727421L, 20720728182L, 20720728342L, 20720728538L, 20720730682L, 20720855961L, 20720869569L, 20720873414L, 20720873415L, 20720873416L, 20720874613L, 20720875148L, 20720878670L, 20720878671L, 20720880640L, 20720891765L, 20720892672L, 20720895777L, 20720895778L, 20720896584L, 20720898519L, 20720898520L, 20720898721L, 20720898911L, 20720900081L, 20720900082L, 20721042420L, 20721046818L, 20721047076L, 20721047077L, 20732570882L, 20732570883L, 20732589559L, 20732663359L, 20732663819L, 20732663820L, 20732664665L, 20732665158L, 20732665572L, 20732761011L, 20732762938L, 20732803232L, 20732803233L, 20732803234L, 20732803235L, 20732803236L, 20732803237L, 20732807410L, 20732807411L, 20732807412L, 20732808132L, 20732862987L, 20732862988L, 20732913283L, 20732913284L, 20732913285L, 20732913286L, 20732913287L, 20732913288L, 20732914006L, 20732915703L, 20732917605L, 20732917606L, 20732981262L, 20732981263L, 20741366777L, 20741567143L, 20741569696L, 20741652597L, 20741704122L, 20741707168L, 20741713589L, 20741713590L, 20741772139L, 20742039986L, 20742039987L, 20742039988L, 20742127946L, 20742645246L, 20742645247L, 20742646700L, 20742741263L, 20742741264L, 20742754745L, 20742754746L, 20742756625L, 20742786739L, 20742786740L, 20742786741L, 20742896320L, 20742896321L, 20742896322L, 20742976762L, 20742978835L, 20870584494L, 20870584495L, 20870584497L, 20870584498L, 20958727580L, 20958727879L, 20958728197L, 20958729251L, 20958729252L, 20958729417L, 20958730402L, 20958730953L, 20958821225L, 20958823769L, 20958823770L, 20958826397L, 20958826826L, 20958827347L, 20958827348L, 20958827971L, 20958828517L, 20958828968L, 20958828969L, 20958829769L, 20958829770L, 20958830118L, 20958931999L, 20958932267L, 20958932711L, 20958932712L, 20958933083L, 20958935191L, 20958935192L, 20958936568L, 20958936569L, 20958936570L, 20958937071L, 20958937072L, 20958937923L, 20958938238L, 20958939077L, 20958939078L, 20958939708L, 20958939709L, 20958940726L, 20959023571L, 20959025519L, 20959025520L, 20959025521L, 20959025952L, 20959026137L, 20959026833L, 20959029527L, 20959103732L, 20959106190L, 20959106922L, 20959107283L, 20959107284L, 20959107285L, 20959107286L, 20959107287L, 20959107967L, 20959107968L, 20959107969L, 20959107970L, 20959110809L, 20959110810L, 20959110947L, 20959152449L, 20959153786L, 20959154107L, 20959154688L, 20959156199L, 20959160712L, 20959160713L, 20959160714L, 20959160715L, 20959160716L, 20959160717L, 20959241195L, 20959241196L, 20959242736L, 20959242737L, 20959243998L, 20959244896L, 20959245310L, 20959245959L, 20959246760L, 20959246761L, 20959246872L, 20959246973L, 20959249316L, 20959250684L, 20959365735L, 20959365736L, 20959365737L, 20959366575L, 20959366880L, 20959367352L, 20959367456L, 20959367796L, 20959368073L, 20959368282L, 20959369173L, 20959412495L, 20959416591L, 20959418658L, 20959418659L, 20959491448L, 20959492400L, 20959493099L, 20959493100L, 20959496922L, 20959555434L, 20959555435L, 20959557512L, 20959557513L, 20959557514L, 20959557515L, 20959557516L, 20959558139L, 20959558670L, 20972014509L, 20972093886L, 20972095286L, 20972098046L, 20972525886L, 20972525887L, 20972525888L, 20972536568L, 20972612450L, 20972778443L, 20972781569L, 20972945811L, 20973532063L, 20973638582L, 20973867499L, 20974030589L, 20974072069L, 20974074917L, 20974076160L, 20974253454L, 20974253455L, 20974256134L, 20974258825L, 20974456326L, 20974456327L, 20974460317L, 20974493359L, 20974581817L, 20974634748L, 20974636538L, 20974665078L, 20974667185L, 20974669632L, 20974712417L, 20974718372L, 20974720345L, 20974806299L, 20974806300L, 20974841612L, 20974843199L, 20974850759L, 20974954500L, 20975176390L, 20976183669L, 20976183670L, 20976188667L, 20976243071L, 20978468870L, 20978559483L, 20978582449L, 20978589005L, 20978713639L, 20978932838L, 20978932839L, 20978932840L, 20978932841L, 20978932842L, 20978939607L, 20979414498L, 20979414499L, 20979853424L, 20979853425L, 20979853426L, 20979932042L, 20980173586L, 20980723052L, 20980807004L, 20980887963L, 20980930283L, 20980930284L, 20980983601L, 20980983602L, 20981122179L, 20981128358L, 20981203417L, 20981304246L, 20981308670L, 20981385297L, 20981387125L, 20981938577L, 20982014858L, 20982017864L, 20982018887L, 20982102180L, 20982105429L, 20982106817L, 20982294035L, 20982294036L, 20982364432L, 20982367076L, 20982445164L, 20982513550L, 20982560491L, 20982596823L, 20982668319L, 20982735787L, 20982737312L, 20982835227L, 20982835228L, 20982835229L, 20983984339L, 21006354290L, 21006354291L, 21006354294L, 21021120197L, 21021120198L, 21053856515L, 21053856516L, 21053922512L, 21053922513L, 21053922514L, 21053922515L, 21053922516L, 21053922517L, 21053923463L, 21053923990L, 21053925208L, 21053925209L, 21053992001L, 21053992002L, 21053992003L, 21053996132L, 21054000752L, 21054000753L, 21054000754L, 21054000755L, 21054000756L, 21054011531L, 21054011936L, 21054011937L, 21054012300L, 21054013673L, 21054014469L, 21054016010L, 21054018894L, 21054018895L, 21054018896L, 21054018897L, 21054018898L, 21054018899L, 21054018900L, 21054018901L, 21054018902L, 21054174233L, 21054174738L, 21054175218L, 21054176427L, 21054176428L, 21054176429L, 21054176719L, 21054177909L, 21054178074L, 21054179317L, 21054179318L, 21054180073L, 21054180866L, 21054180867L, 21054252802L, 21054253253L, 21054253526L, 21054254115L, 21054254290L, 21054254478L, 21054254722L, 21054255031L, 21054255379L, 21054255783L, 21054256727L, 21054256728L, 21054256729L, 21054256730L, 21054380018L, 21054451923L, 21054451924L, 21054451925L, 21054451926L, 21054452676L, 21054453565L, 21054453566L, 21054454048L, 21054454049L, 21054454571L, 21054454881L, 21054455274L, 21054455369L, 21054455556L, 21054455720L, 21057273722L, 21057933162L, 21058460337L, 21058881187L, 21059320902L, 21059462985L, 21061287770L, 21061348692L, 21061404496L, 21061472409L, 21061473822L, 21061480696L, 21061534808L, 21061534809L, 21061538051L, 21061591747L, 21061596068L, 21061600865L, 21061682869L, 21061684738L, 21061689182L, 21061690879L, 21061749032L, 21061951970L, 21061953481L, 21061960342L, 21062003762L, 21062008066L, 21062008067L, 21062062425L, 21062066426L, 21062070944L, 21062168212L, 21064869003L, 21065082195L, 21065082196L, 21065603732L, 21065603733L, 21209501464L, 21209583048L, 21209583049L, 21209583050L, 21209587016L, 21209675786L, 21209675787L, 21209782186L, 21209782187L, 21209782188L, 21210591701L, 21210592118L, 21210592431L, 21210593039L, 21210595029L, 21210596033L, 21210596034L, 21210685325L, 21210685326L, 21210743401L, 21210743402L, 21210743403L, 21210746945L, 21210746946L, 21210771406L, 21210772025L, 21210849801L, 21210849802L, 21210850487L, 21210861759L, 21210863962L, 21210865006L, 21210919864L, 21210919865L, 21210942323L, 21210942324L, 21210987404L, 21210987735L, 21210988020L, 21210988282L, 21210988527L, 21210988896L, 21210989200L, 21210990896L, 21210993542L, 21210993543L, 21210993544L, 21210993545L, 21210993546L, 21210994345L, 21210994346L, 21210995371L, 21210995372L, 21210996857L, 21210996858L, 21210996859L, 21210996860L, 21210999123L, 21211032481L, 21211032928L, 21211033242L, 21211033809L, 21211034005L, 21211035344L, 21211036450L, 21211037004L, 21211038136L, 21211038570L, 21211039078L, 21211039669L, 21211039670L, 21211040217L, 21211182923L, 21211183423L, 21211188012L, 21211188336L, 21211189519L, 21211189520L, 21211262908L, 21211262909L, 21211265897L, 21211265898L, 21211269380L, 21211269381L, 21211269911L, 21211269912L, 21211489335L, 21211489336L, 21211506950L, 21211508125L, 21211508126L, 21211510505L, 21211510903L, 21211580048L, 21211618058L, 21211676822L, 21211676823L, 21211682330L, 21211682817L, 21211704947L, 21211704948L, 21211755262L, 21211755609L, 21211756036L, 21211821874L, 21211827703L, 21211827704L, 21211863795L, 21211866768L, 21211867510L, 21211867880L, 21211868486L, 21211908092L, 21211954485L, 21211954713L, 21211955089L, 21211955643L, 21211967020L, 21211967908L, 21211968173L, 21211968470L, 21211969623L, 21211969711L, 21211970927L, 21212001550L, 21212002016L, 21212005839L, 21220243842L, 21220243843L, 21221211910L, 21221211911L, 21221213368L, 21221219550L, 21221370954L, 21221491497L, 21221496207L, 21221811738L, 21221811739L, 21221811740L, 21221811741L, 21221811742L, 21221811743L, 21221811744L, 21221871679L, 21221877176L, 21221877177L, 21221879545L, 21222001005L, 21222090993L, 21222142143L, 21222142144L, 21222142145L, 21222142146L, 21222142147L, 21222142148L, 21222142149L, 21226386553L, 21257137514L, 21257191460L, 21257200213L, 21257262763L, 21257265759L, 21257267788L, 21257269943L, 21257395853L, 21296846730L, 21296846731L, 21296846732L, 21296846734L, 21296846735L, 21296846736L, 21297340592L, 21297398829L, 21297471862L, 21297902140L, 21297902141L, 21297902142L, 21297902143L, 21297902144L, 21299174036L, 21299177044L, 21299244784L, 21299698695L, 21299698696L, 21299885561L, 21299885562L, 21300002456L, 21300058651L, 21300058652L, 21300112754L, 21300329353L, 21300329354L, 21300329355L, 21300329356L, 21300560658L, 21300982285L, 21300982286L, 21300982287L, 21301120308L, 21301120309L, 21301213106L, 21301213107L, 21301219440L, 21301677602L, 21301677603L, 21301994193L, 21301994194L, 21301994195L, 21301994196L, 21301994197L, 21301994198L, 21301999868L, 21302125656L, 21302125657L, 21302305547L, 21302543917L, 21302549172L, 21302711652L, 21302711653L, 21302717460L, 21302772627L, 21302777326L, 21302780358L, 21302858535L, 21302923517L, 21302925958L, 21309161948L, 21333618091L, 21374816280L);


        for (Long l : list1) {
            if (!list2.contains(l)) {
                System.out.println(l);
            }
        }

    }


    @Test
    public void test07() {
        System.out.println(getImgUrls("123,456,http777"));
        Set<String> codeSet = Sets.newHashSet();
        ArrayList<String> strings = Lists.newArrayList(codeSet);
        String maxNumberOfCode = getMaxNumberOfCode(strings);
        System.out.println(maxNumberOfCode);
        Long l = Long.valueOf(maxNumberOfCode);
        System.out.println(l);
        System.out.println(l + 1);
        System.out.println(getTrueMaxCode(l + 1));
    }

    public String getTrueMaxCode(Long code) {
        if (code > MAX_FORMAT_CODE) {
            return code.toString();
        }
        DecimalFormat df = new DecimalFormat("00000");
        return df.format(code);
    }

    public String getMaxNumberOfCode(List<String> codeList) {
        Long code = 0L;
        Set<Long> numberSet = Sets.newHashSet();
        for (String c : codeList) {
            if (c.matches("^[0-9]*$")) {
                numberSet.add(Long.parseLong(c));
            }
        }
        if (CollectionUtils.isNotEmpty(numberSet)) {
            code = Collections.max(numberSet);
        }
        if (code > MAX_FORMAT_CODE) {
            return code.toString();
        }
        DecimalFormat df = new DecimalFormat("00000");
        return df.format(code);
    }

    private static final int MAX_FORMAT_CODE = 99999;

    private List<String> getImgUrls(String imgAddressList) {
        List<String> imgUrls = Arrays.asList(imgAddressList.split(","));
        return imgUrls.stream().map(imgUrl -> {
            if (!imgUrl.startsWith("http")) {
                return "abc" + imgUrl;
            }
            return imgUrl;
        }).collect(Collectors.toList());
    }


    @Test
    public void test08() {

        Demo demo = new Demo();
        Demo demo1 = new Demo();
        Demo demo2 = new Demo();
        Demo demo3 = new Demo();

        ArrayList<Demo> demos = new ArrayList<>();
        demos.add(demo);
        demos.add(demo1);
        demos.add(demo2);
        demos.add(demo3);

        for (Demo d : demos) {
            System.out.println(d);
        }

        List<List<Demo>> partition = Lists.partition(demos, 2);
        for (List<Demo> demoList : partition) {
            for (Demo d : demoList) {
                System.out.println(d);
            }
        }
    }

    @Test
    public void test10() {
        String jsonString = "{\"message\": \"This is a { character.\"}";
        System.out.println(JSON.parse(jsonString));
    }

    @Test
    public void test11() {

        System.out.println("aa");
        try {
            try {
                throw new MyException("hh");
            } catch (MyException myException) {
                System.out.println("tt");
            } catch (Exception e) {
                if (e instanceof MyException) {
                    System.out.println(((MyException) e).getErrorMsg());
                }
                if (e instanceof RuntimeException) {
                    System.out.println(e.getMessage());
                }
                throw e;
            }
        } catch (Exception e) {
            if (e instanceof MyException) {
                System.out.println("cc");
            }
        }
        System.out.println("aa");

    }


    @Test
    public void test12() {
        String a = "230abc";
        String b = "330abc";
        System.out.println(a.compareTo(b));

        List<String> list = Lists.newArrayList(a, b);
        list = list.stream().sorted(new Comparator<String>() {
            @Override
            public int compare(String o1, String o2) {
                return o1.compareTo(o2);
            }
        }).collect(Collectors.toList());
        System.out.println(list);

        System.out.println(Collections.emptyList().size());
    }
}
